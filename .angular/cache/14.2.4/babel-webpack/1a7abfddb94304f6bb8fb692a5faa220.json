{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EditProductAction, UpdateProductAction } from '../../../ngrx/products.actions';\nimport { ProductsStateEnum } from '../../../ngrx/products.reducers';\nimport { Validators } from '@angular/forms';\nlet EditProductComponent = class EditProductComponent {\n  constructor(fb, activatedRoute, store, router) {\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.store = store;\n    this.router = router;\n    this.formBuilt = false;\n    this.state = null;\n    this.productFormGroup = null;\n    this.productStateEnum = ProductsStateEnum;\n    this.submitted = false;\n    this.productId = this.activatedRoute.snapshot.params.id;\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new EditProductAction(this.productId));\n    this.store.subscribe(myStore => {\n      var _a, _b;\n\n      this.state = myStore.catalogState;\n\n      if (((_a = this.state) === null || _a === void 0 ? void 0 : _a.dataState) === ProductsStateEnum.LOADED) {\n        if (this.state.currentProduct != null) {\n          this.productFormGroup = this.fb.group({\n            id: [(_b = this.state.currentProduct) === null || _b === void 0 ? void 0 : _b.id, Validators.required],\n            name: [this.state.currentProduct.name, Validators.required],\n            price: [this.state.currentProduct.price, Validators.required],\n            quantity: [this.state.currentProduct.quantity],\n            selected: [this.state.currentProduct.selected],\n            available: [this.state.currentProduct.available]\n          }); // 2nd method\n          // this.productFormGroup = this.fb.group({});\n          // const data = this.state.currentProduct;\n          // // tslint:disable-next-line:forin\n          // for (const f in data){\n          //   // @ts-ignore\n          //   this.productFormGroup.addControl(f, new FormControl(data[f], Validators.required));\n          // }\n\n          this.formBuilt = true;\n        }\n      }\n    });\n  }\n\n  okUpdated() {}\n\n  onUpdateProduct() {\n    var _a, _b;\n\n    this.submitted = true;\n\n    if ((_a = this.productFormGroup) === null || _a === void 0 ? void 0 : _a.invalid) {\n      return;\n    }\n\n    this.store.dispatch(new UpdateProductAction((_b = this.productFormGroup) === null || _b === void 0 ? void 0 : _b.value));\n  }\n\n};\nEditProductComponent = __decorate([Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})], EditProductComponent);\nexport { EditProductComponent };","map":null,"metadata":{},"sourceType":"module"}