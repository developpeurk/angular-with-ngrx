{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap, of } from 'rxjs';\nimport { GetAllProductErrorAction, GetAllProductSuccessAction, ProductsActionTypes } from './products.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/product.service\";\nexport let ProductsEffects = /*#__PURE__*/(() => {\n  class ProductsEffects {\n    constructor(effectActions, productService) {\n      this.effectActions = effectActions;\n      this.productService = productService;\n      this.getAllProductsEffect = createEffect(() => this.effectActions.pipe(ofType(ProductsActionTypes.GET_ALL_PRODUCT), mergeMap(action => {\n        return this.productService.getProducts().pipe(map(products => new GetAllProductSuccessAction(products)), catchError(err => of(new GetAllProductErrorAction(err.message))));\n      })));\n    }\n\n  }\n\n  ProductsEffects.ɵfac = function ProductsEffects_Factory(t) {\n    return new (t || ProductsEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ProductService));\n  };\n\n  ProductsEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsEffects,\n    factory: ProductsEffects.ɵfac\n  });\n  return ProductsEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}