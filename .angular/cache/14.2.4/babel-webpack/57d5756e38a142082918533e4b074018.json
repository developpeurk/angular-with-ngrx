{"ast":null,"code":"import { Validators as v } from '@angular/forms';\nimport { ProductsStateEnum } from '../../../ngrx/products.reducers';\nimport { NewProductAction } from '../../../ngrx/products.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/product.service\";\nimport * as i3 from \"@ngrx/store\";\nexport let NewProductComponent = /*#__PURE__*/(() => {\n  class NewProductComponent {\n    constructor(fb, productService, store) {\n      this.fb = fb;\n      this.productService = productService;\n      this.store = store;\n      this.productFormGroup = null;\n      this.state = null;\n      this.productStateEnum = ProductsStateEnum;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.store.dispatch(new NewProductAction({}));\n      this.store.subscribe(myStore => {\n        this.state = myStore.catalogState;\n\n        if (myStore.catalogState.dataState === this.productStateEnum.NEW) {\n          this.productFormGroup = this.fb.group({\n            name: ['', v.required],\n            price: [0, v.required],\n            quantity: [0, v.required],\n            available: [true, v.required],\n            selected: [true, v.required]\n          });\n        }\n      });\n    }\n\n    newProduct() {}\n\n    onSaveProduct() {}\n\n  }\n\n  NewProductComponent.ɵfac = function NewProductComponent_Factory(t) {\n    return new (t || NewProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.Store));\n  };\n\n  NewProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewProductComponent,\n    selectors: [[\"app-new-product\"]],\n    decls: 2,\n    vars: 0,\n    template: function NewProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"hello\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return NewProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}