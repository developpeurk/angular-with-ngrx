{"ast":null,"code":"import { ProductsActionTypes } from './products.actions';\nexport var ProductsStateEnum = /*#__PURE__*/(() => {\n  (function (ProductsStateEnum) {\n    ProductsStateEnum[\"LOADING\"] = \"Loading\";\n    ProductsStateEnum[\"LOADED\"] = \"Loaded\";\n    ProductsStateEnum[\"ERROR\"] = \"Error\";\n    ProductsStateEnum[\"INITIAL\"] = \"initial\";\n  })(ProductsStateEnum || (ProductsStateEnum = {}));\n\n  return ProductsStateEnum;\n})();\nconst initState = {\n  products: [],\n  errorMessage: '',\n  dataState: ProductsStateEnum.INITIAL\n};\nexport function productReducers(state = initState, action) {\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADING\n      });\n\n    case ProductsActionTypes.GET_ALL_PRODUCT_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADED,\n        products: action.payload\n      });\n\n    case ProductsActionTypes.GET_ALL_PRODUCT_ERROR:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.ERROR,\n        errorMessage: action.payload\n      });\n\n    /* GET SELECTED PRODUCTS */\n\n    case ProductsActionTypes.GET_SELECTED_PRODUCT:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADING\n      });\n\n    case ProductsActionTypes.GET_SELECTED_PRODUCT_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADED,\n        products: action.payload\n      });\n\n    case ProductsActionTypes.GET_SELECTED_PRODUCT_ERROR:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.ERROR,\n        errorMessage: action.payload\n      });\n\n    /*  SEARCH PRODUCTS */\n\n    case ProductsActionTypes.SEARCH_PRODUCT:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADING\n      });\n\n    case ProductsActionTypes.SEARCH_PRODUCT_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADED,\n        products: action.payload\n      });\n\n    case ProductsActionTypes.SEARCH_PRODUCT_ERROR:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.ERROR,\n        errorMessage: action.payload\n      });\n\n    /*  SELECT / UNSELECT PRODUCTS */\n\n    case ProductsActionTypes.SELECT_PRODUCT:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADING\n      });\n\n    case ProductsActionTypes.SELECT_PRODUCT_SUCCESS:\n      let product = action.payload;\n      let data = listProducts = [...state.products];\n      listProducts.filter(p => p.id === product.id ? product : p);\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.LOADED\n      });\n\n    case ProductsActionTypes.SELECT_PRODUCT_ERROR:\n      return Object.assign(Object.assign({}, state), {\n        dataState: ProductsStateEnum.ERROR,\n        errorMessage: action.payload\n      });\n\n    default:\n      return Object.assign({}, state);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}