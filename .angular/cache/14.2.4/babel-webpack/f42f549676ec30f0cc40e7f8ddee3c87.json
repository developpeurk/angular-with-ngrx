{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getProducts() {\n      const host = Math.random() > 0.2 ? environment.host : environment.unreachableHost;\n      return this.http.get(host + '/products');\n    }\n\n    getSelectedProducts() {\n      return this.http.get(environment.host + '/products?selected=true');\n    }\n\n    getAvailableProducts() {\n      return this.http.get(environment.host + '/products?available=true');\n    }\n\n    searchProducts(name) {\n      return this.http.get(environment.host + '/products?name_like=' + name);\n    }\n\n    setSelected(product) {\n      return this.http.put(environment.host + '/products/' + product.id, Object.assign(Object.assign({}, product), {\n        selected: !product.selected\n      }));\n    }\n\n    delete(id) {\n      return this.http.delete(environment.host + '/products/' + id);\n    }\n\n    save(product) {\n      return this.http.post(environment.host + '/products/', product);\n    }\n\n    update(product) {\n      return this.http.put(environment.host + '/products/' + product.id, product);\n    }\n\n    getProductById(id) {\n      return this.http.get(environment.host + '/products/' + id);\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}